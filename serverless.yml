service:
  name: realtime-ww2

plugins:
  - serverless-webpack
  - serverless-crypt

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128
  timeout: 10
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:PutObject"
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: S3TweetCache
            - /*

package:
  include:
    - .serverless-secret.json

custom:
  stage: ${opt:stage, self:provider.stage}
  prod:
    twitterRestBaseUrl: https://api.twitter.com/1.1
    cacheTweetsSchedule: rate(1 hour)
  dev:
    twitterRestBaseUrl: { "Fn::Join" : ["", [ "https://", { "Ref" : "ApiGatewayRestApi" }, ".execute-api.${self:provider.region}.amazonaws.com/${self:custom.stage}" ] ]  }
    cacheTweetsSchedule: cron(0 0 * * ? 1970)
  cryptKeyId: c7ce8560-aaf1-4780-be8c-b048a0a749f2
  tweetCacheBucketName: ${self:service}-${self:custom.stage}-tweet

functions:
  alexa-skill:
    handler: packages/core/src/alexa-skill.handler
    events:
      - alexaSkill
    environment:
      TWEET_CACHE_BUCKET_NAME: ${self:custom.tweetCacheBucketName}
      CLOCK: NOW
  cache-tweets:
    handler: packages/core/src/cache-tweets.handler
    events:
      - schedule: ${self:custom.${self:custom.stage}.cacheTweetsSchedule}
    environment:
      TWEET_CACHE_BUCKET_NAME: ${self:custom.tweetCacheBucketName}
      TWITTER_REST_BASE_URL: ${self:custom.${self:custom.stage}.twitterRestBaseUrl}
  fake-twitter:
    handler: packages/fake-twitter/handler.handler
    events:
      - http: GET statuses/user_timeline.json
  
resources:
  Resources:
    S3TweetCache:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.tweetCacheBucketName}
